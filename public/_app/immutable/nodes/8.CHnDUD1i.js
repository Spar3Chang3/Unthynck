import"../chunks/disclose-version.Bg9kRutz.js";import"../chunks/legacy.CtaTdtmd.js";import{a1 as F,a8 as k,a2 as T,a6 as A,Z as P,a3 as i,a7 as c,g as o,aa as l,a5 as w}from"../chunks/index-client.CHxRNfLn.js";import{s as x}from"../chunks/render.CvTPB3-6.js";import{i as N}from"../chunks/if.DML_PgDJ.js";import{e as I,i as $}from"../chunks/each.DGSep0UY.js";import{f as O,a as m,t as u}from"../chunks/template.BBsDH0qk.js";import{p}from"../chunks/proxy.DLfti-hq.js";var W=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Parsed Tracks</h2> <pre class="svelte-ma7pqn"> </pre> <button class="svelte-ma7pqn">Copy JSON to Clipboard</button></div>'),Z=u("<li> </li>"),z=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Uploaded Files</h2> <ul></ul></div>'),B=u('<section class="nunja svelte-ma7pqn"><h1 class="svelte-ma7pqn">Music Directory Uploader</h1> <div class="upload-section svelte-ma7pqn"><label class="svelte-ma7pqn">Upload Music Directory</label> <input type="file" webkitdirectory directory="" multiple class="svelte-ma7pqn"></div> <!> <!></section>');function G(f,U){F(U,!0);let h=k(p([])),d=k(p([])),q=k(void 0);function M(e){return e.length===0?null:(e[0].webkitRelativePath||e[0].relativePath).split("/")[0]}async function D(e,a){return new Promise((r,n)=>{const t=e.name.replace(".mp3",""),s=t.indexOf(" "),g=t.slice(0,s),j=t.slice(s+1),v=new Audio(URL.createObjectURL(e));v.addEventListener("loadedmetadata",()=>{r({trackNumber:g,trackName:j,trackDuration:Math.round(v.duration),trackPath:`releases/${a}/music`,fileName:e.name,artworkPath:`releases/${a}/art`,trackDescription:""}),URL.revokeObjectURL(v.src)}),v.addEventListener("error",H=>{n(new Error("Error loading audio file"))})})}async function E(e){const a=Array.from(e.target.files);P(h,p(a));const r=M(a),n=a.filter(t=>t.name.endsWith(".mp3")).sort((t,s)=>t.name.localeCompare(s.name));try{const t=await Promise.all(n.map(s=>D(s,r)));P(d,p(t))}catch(t){console.error("Error parsing MP3 files",t)}}function J(){const e=JSON.stringify(o(d),null,2);o(q).writeText(e).then(()=>alert("JSON copied to clipboard!")).catch(a=>console.error("Error copying JSON:",a))}T(()=>{typeof navigator<"u"&&navigator.clipboard?P(q,p(navigator.clipboard)):console.warn("Clipboard API is not supported in this environment")});var b=B(),y=i(c(b),2),L=i(c(y),2);l(y);var _=i(y,2);{var R=e=>{var a=W(),r=i(c(a),2),n=c(r,!0);w(()=>x(n,JSON.stringify(o(d),null,2))),l(r);var t=i(r,2);l(a),O("click",t,J),m(e,a)};N(_,e=>{o(d).length>0&&e(R)})}var S=i(_,2);{var C=e=>{var a=z(),r=i(c(a),2);I(r,21,()=>o(h),$,(n,t)=>{var s=Z(),g=c(s,!0);l(s),w(()=>x(g,o(t).webkitRelativePath||o(t).relativePath)),m(n,s)}),l(r),l(a),m(e,a)};N(S,e=>{o(h).length>0&&e(C)})}l(b),O("change",L,E),m(f,b),A()}function re(f){G(f,{})}export{re as component};
