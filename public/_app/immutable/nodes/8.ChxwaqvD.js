import"../chunks/disclose-version.Bg9kRutz.js";import{p as C,at as k,a as j,m as P,l as s,s as i,c,r as l,t as w}from"../chunks/runtime.CujgLOHB.js";import{s as x}from"../chunks/render.DYv6prKW.js";import{i as N}from"../chunks/if.Ck0J_65a.js";import{e as F,i as T}from"../chunks/each.DfX4q5Xw.js";import{e as O,a as v,t as u}from"../chunks/template.GUaYdGvl.js";import{p}from"../chunks/proxy.BCqRXuL-.js";import{o as A}from"../chunks/index-client.2-vHILIg.js";var I=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Parsed Tracks</h2> <pre class="svelte-ma7pqn"> </pre> <button class="svelte-ma7pqn">Copy JSON to Clipboard</button></div>'),$=u("<li> </li>"),W=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Uploaded Files</h2> <ul></ul></div>'),z=u('<section class="nunja svelte-ma7pqn"><h1 class="svelte-ma7pqn">Music Directory Uploader</h1> <div class="upload-section svelte-ma7pqn"><label class="svelte-ma7pqn">Upload Music Directory</label> <input type="file" webkitdirectory directory="" multiple class="svelte-ma7pqn"></div> <!> <!></section>');function B(f,U){C(U,!0);let h=k(p([])),d=k(p([])),q=k(void 0);function M(a){return a.length===0?null:(a[0].webkitRelativePath||a[0].relativePath).split("/")[0]}async function D(a,e){return new Promise((r,n)=>{const t=a.name.replace(".mp3",""),o=t.indexOf(" "),g=t.slice(0,o),S=t.slice(o+1),m=new Audio(URL.createObjectURL(a));m.addEventListener("loadedmetadata",()=>{r({trackNumber:g,trackName:S,trackDuration:Math.round(m.duration),trackPath:`releases/${e}/music`,fileName:a.name,artworkPath:`releases/${e}/art`,trackDescription:""}),URL.revokeObjectURL(m.src)}),m.addEventListener("error",G=>{n(new Error("Error loading audio file"))})})}async function E(a){const e=Array.from(a.target.files);P(h,p(e));const r=M(e),n=e.filter(t=>t.name.endsWith(".mp3")).sort((t,o)=>t.name.localeCompare(o.name));try{const t=await Promise.all(n.map(o=>D(o,r)));P(d,p(t))}catch(t){console.error("Error parsing MP3 files",t)}}function J(){const a=JSON.stringify(s(d),null,2);s(q).writeText(a).then(()=>alert("JSON copied to clipboard!")).catch(e=>console.error("Error copying JSON:",e))}A(()=>{typeof navigator<"u"&&navigator.clipboard?P(q,p(navigator.clipboard)):console.warn("Clipboard API is not supported in this environment")});var b=z(),y=i(c(b),2),L=i(c(y),2);l(y);var _=i(y,2);N(_,()=>s(d).length>0,a=>{var e=I(),r=i(c(e),2),n=c(r,!0);w(()=>x(n,JSON.stringify(s(d),null,2))),l(r);var t=i(r,2);l(e),O("click",t,J),v(a,e)});var R=i(_,2);N(R,()=>s(h).length>0,a=>{var e=W(),r=i(c(e),2);F(r,21,()=>s(h),T,(n,t)=>{var o=$(),g=c(o,!0);l(o),w(()=>x(g,s(t).webkitRelativePath||s(t).relativePath)),v(n,o)}),l(r),l(e),v(a,e)}),l(b),O("change",L,E),v(f,b),j()}function te(f){B(f,{})}export{te as component};
