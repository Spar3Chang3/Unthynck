import"../chunks/disclose-version.Bg9kRutz.js";import"../chunks/legacy.CtaTdtmd.js";import{aq as F,au as k,ar as T,a1 as P,g as s,av as n,aw as c,ax as l,ay as x}from"../chunks/runtime.itU1-eAt.js";import{s as _}from"../chunks/render.Dr4UWjeq.js";import{i as N}from"../chunks/if.vB35G9Pt.js";import{e as A,i as I}from"../chunks/each.CmlMm4eT.js";import{a as v,t as u}from"../chunks/template.CiIwdCRR.js";import{e as O}from"../chunks/events.Dwqh_hTn.js";import{p}from"../chunks/proxy.TeBb5cww.js";import{o as $}from"../chunks/index-client.PJFtGBc-.js";var W=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Parsed Tracks</h2> <pre class="svelte-ma7pqn"> </pre> <button class="svelte-ma7pqn">Copy JSON to Clipboard</button></div>'),z=u("<li> </li>"),B=u('<div class="results-section svelte-ma7pqn"><h2 class="svelte-ma7pqn">Uploaded Files</h2> <ul></ul></div>'),G=u('<section class="nunja svelte-ma7pqn"><h1 class="svelte-ma7pqn">Music Directory Uploader</h1> <div class="upload-section svelte-ma7pqn"><label class="svelte-ma7pqn">Upload Music Directory</label> <input type="file" webkitdirectory directory="" multiple class="svelte-ma7pqn"></div> <!> <!></section>');function H(f,U){F(U,!0);let h=k(p([])),d=k(p([])),q=k(void 0);function M(e){return e.length===0?null:(e[0].webkitRelativePath||e[0].relativePath).split("/")[0]}async function D(e,t){return new Promise((r,i)=>{const a=e.name.replace(".mp3",""),o=a.indexOf(" "),g=a.slice(0,o),j=a.slice(o+1),m=new Audio(URL.createObjectURL(e));m.addEventListener("loadedmetadata",()=>{r({trackNumber:g,trackName:j,trackDuration:Math.round(m.duration),trackPath:`releases/${t}/music`,fileName:e.name,artworkPath:`releases/${t}/art`,trackDescription:""}),URL.revokeObjectURL(m.src)}),m.addEventListener("error",K=>{i(new Error("Error loading audio file"))})})}async function E(e){const t=Array.from(e.target.files);P(h,p(t));const r=M(t),i=t.filter(a=>a.name.endsWith(".mp3")).sort((a,o)=>a.name.localeCompare(o.name));try{const a=await Promise.all(i.map(o=>D(o,r)));P(d,p(a))}catch(a){console.error("Error parsing MP3 files",a)}}function J(){const e=JSON.stringify(s(d),null,2);s(q).writeText(e).then(()=>alert("JSON copied to clipboard!")).catch(t=>console.error("Error copying JSON:",t))}$(()=>{typeof navigator<"u"&&navigator.clipboard?P(q,p(navigator.clipboard)):console.warn("Clipboard API is not supported in this environment")});var b=G(),y=n(c(b),2),L=n(c(y),2);l(y);var w=n(y,2);{var R=e=>{var t=W(),r=n(c(t),2),i=c(r,!0);x(()=>_(i,JSON.stringify(s(d),null,2))),l(r);var a=n(r,2);l(t),O("click",a,J),v(e,t)};N(w,e=>{s(d).length>0&&e(R)})}var S=n(w,2);{var C=e=>{var t=B(),r=n(c(t),2);A(r,21,()=>s(h),I,(i,a)=>{var o=z(),g=c(o,!0);l(o),x(()=>_(g,s(a).webkitRelativePath||s(a).relativePath)),v(i,o)}),l(r),l(t),v(e,t)};N(S,e=>{s(h).length>0&&e(C)})}l(b),O("change",L,E),v(f,b),T()}function se(f){H(f,{})}export{se as component};
